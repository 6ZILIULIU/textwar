// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        BarrelPower: { value: 2.0 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform data{
    float BarrelPower;
  };

  vec2 Distort(vec2 p)
  {
      float theta  = atan(p.y, p.x);
      float radius = length(p);
      radius = pow(radius, BarrelPower);
      p.x = radius * cos(theta);
      p.y = radius * sin(theta);
      return 0.5 * (p + 1.0);
  }
  void main () {
    vec2 xy = 2.0 * v_uv0.xy - 1.0;
    vec2 uv;
    float d = length(xy);
    // if (d > 1.0)
    // {
    uv = Distort(xy);
    // }
    // else
    // {
    //   uv = v_uv0.xy;
    // }
    vec4 c = texture2D(texture, uv);
    gl_FragColor = c;
  }
}%
